<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSmashPolls</name>
    </assembly>
    <members>
        <member name="T:SuperSmashPolls.Characters.CharacterManager">
            <summary>
            This class handles everything relating to characters.
            </summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.IdleIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.WalkIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.JumpIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.SpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.SideSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.UpSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.DownSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.BasicIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Name">
            <summary> This characters name</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Mass">
            The mass of the character (kg) 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Friction">
            The friction of the character 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Restitution">
            The restitution of the character (how bouncy they are) 
        </member>
        <member name="T:SuperSmashPolls.Characters.CharacterManager.SimpleMove">
            <summary>The function signiture for moves</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.CharacterBody">
            <summary></summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.CharacterVertices">
            The vertices created from the hitbox texture that are used to construct the body of the character 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.MoveTextures">
            The CharacterAction (texture handler) for each of the character moves 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.MoveAudio">
            The audio for each of the characters moves 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.MoveFunctions">
            The functions to run when a move is done 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.ImplimentedMoves">
            The number of moves that have been implimented for this character 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Scale">
            The scale of textures 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.MoveData">
            The data so that a new class can be constructed from this one (easily) 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.BodyTexture">
            The texture of the body 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.CanMove">
            Whether or not the character is allow to do another move 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.CurrentMove">
             
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.WorkingMove">
            The move that the character is working on doing 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.PreviousState">
             
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.CharacterOrigin">
             
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.GameWorld">
             
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Register">
            This is the amount the joystick must be over for it to register as intentional 
        </member>
        <member name="F:SuperSmashPolls.Characters.CharacterManager.Direction">
            The direction that the character is moving 
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.#ctor">
            <summary>
            Default constructor for making a blank character. The name is initialized to check and to check after a game 
            has already been played (and they already selected a character so it wouldn't be null)
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.#ctor(System.Single,System.Single,System.Single,System.String)">
            <summary>
            This is a constructor
            </summary>
            <param name="mass"></param>
            <param name="friction"></param>
            <param name="restitution"></param>
            <param name="name"></param>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.LoadCharacterContent(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Tuple{System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Audio.SoundEffect,SuperSmashPolls.Characters.CharacterManager.SimpleMove}[])">
            <summary>
            
            </summary>
            <param name="bodyTexture"></param>
            <param name="scale"></param>
            <param name="moveData"></param>
            <remarks>Load moves in this order: IdleIndex, WalkIndex, JumpIndex, SpecialIndex, SideSpecialIndex, 
            UpSpecialIndex, DownSpecialIndex, BasicIndex</remarks>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.Clone">
            <summary>
            Makes a new CharacterManager from this one so that we can store information in one, and play in another
            </summary>
            <returns>A CharacterManager with the same attributes as this one</returns>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.SetupCharacter(FarseerPhysics.Dynamics.World,Microsoft.Xna.Framework.Vector2,System.Int16)">
            <summary>
            Creates the body of the character in the game's world for use during a match. This must be called before the
            character is updates.
            </summary>
            <param name="gameWorld">The world to put the character in</param>
            <param name="position">The position to put the character in</param>
            <param name="playerGroup">The collision group for this player to be placed in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.GetPosition">
            <summary>
            Gets the position of the character in meters
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.Respawn(Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.UpdateCharacter(Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            
            </summary>
            <param name="currentState"></param>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the character on the screen
            </summary>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.CreateVerticesFromTexture(Microsoft.Xna.Framework.Graphics.Texture2D,System.Single,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm)">
            <summary>
            Creates a list of vertices from a texture.
            </summary>
            <param name="texture">The texture to make a body from</param>
            <param name="scale">The scale of the texture</param>
            <param name="algorithm">The decomposition algorithm to use</param>
            <remarks> Available algorithms to use are Bayazit, Dealuny, Earclip, Flipcode, Seidel, SeidelTrapazoid</remarks>
            @warning In order for this to work the input must have a transparent background. I highly reccomend that you
            only use this with PNGs as that is what I have tested and I know they work. This will only produce a bosy as
            clean as the texture you give it, so avoid partically transparent areas and little edges.
        </member>
        <member name="M:SuperSmashPolls.Characters.CharacterManager.IsImplimented(System.Int32)">
            <summary>
            
            </summary>
            <param name="move"></param>
            <returns></returns>
        </member>
        <member name="T:SuperSmashPolls.Characters.MoveDefinition">
            <summary>
            All character moves are declared and defined here
            </summary>
            <remarks>TODO make this into an abstract class and make one of the paramaters to the character class that 
            abstract and define each character's moves in a separate file all nice and pretty</remarks>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.Idle(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            The function for any character in their idle state...nothing happens here
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldWalk(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            The function for having The Donald walk
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldJump(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            The jump function for The Donald
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldSpecial(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldSideSpecial(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            Creates an explosion in front of The Donald
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldUpSpecial(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            Creates and explosion in front of The Donald and above him
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldDownSpecial(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.TheDonaldBasic(FarseerPhysics.Dynamics.Body,System.Single,System.Boolean,FarseerPhysics.Dynamics.World)">
            <summary>
            
            </summary>
            <param name="characterBody">The body of the character preforming this move</param>
            <param name="direction">The direction that the character is facing</param>
            <param name="onCharacter">Whether or not this should be applied to the character (only matters for moves
            where sometimes it should go to the player and sometimes to an enemy)</param>
            <param name="world">The world that the move is taking place in</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.CreateAndActivateExplosion(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Creates and activates an explosion with the given parameters
            </summary>
            <param name="world">The world to activate the exploision in</param>
            <param name="characterBody">The body of the character creating the explosion</param>
            <param name="position">The position of the explosion in the world</param>
            <param name="force">The force of the explosion (by default it is Trump's side special)</param>
            <param name="radius">The radius of the explosion in meters</param>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.CreateAndActivateExplosion(FarseerPhysics.Dynamics.World,FarseerPhysics.Dynamics.Body,System.Single,System.Single,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Creates and activates an explosion with the given parameters in multiple positions in the world
            </summary>
            <param name="world">The world to activate the exploision in</param>
            <param name="characterBody">The body of the character creating the explosion</param>
            <param name="position">The position(s) of the explosion in the world</param>
            <param name="force">The force of the explosion (by default it is Trump's side special)</param>
            <param name="radius">The radius of the explosion in meters</param>
            <remarks>If you only need one position in the world, use the other function</remarks>
        </member>
        <member name="M:SuperSmashPolls.Characters.MoveDefinition.OffsetFromCharacter(FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Offsets a value in pixels from the character position
            </summary>
            <param name="characterBody">The body of the character to offset from</param>
            <param name="pixelAmount">The amount of pixels to offset</param>
            <param name="direction">If the offset needs to go to a specific side, set this to the direction float
            of the character so that instead of using the raw number in pixelAmount it changed the direction based on
             this. DIRECTION ONLY AFFECTS SIDEWAYS, NOT UP AND DOWN</param>
            <returns></returns>
        </member>
        <member name="T:SuperSmashPolls.Characters.Moves">
            <summary>
            Class for handling character moves. The moves themself must be defined within the MoveDefinition class, than
            that class passed to here, than the filled class has to be put within its corresponding character.
            </summary>
            <remarks>To have audio play during a move you must run the AudioHandler.PlayEffect command</remarks>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.IdleIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.WalkIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.JumpIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.SpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.SideSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.UpSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.DownSpecialIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="F:SuperSmashPolls.Characters.Moves.BasicIndex">
            <summary>The index of various moves to be used in their arrays</summary>
        </member>
        <member name="T:SuperSmashPolls.GameItemControl.Gamemode">
            <summary>
            This is to hold information on what game mode people are playing, how much time is left, the max number of lives,
            etc.
            </summary>
        </member>
        <member name="T:SuperSmashPolls.GameItemControl.Gamemode.Mode">
            <summary>
            The possible modes the game can be
            </summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Mode.Time">
            <summary>Sets a time limit</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Mode.Stock">
            <summary>Sets a life limit (or death limit)</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Mode.TimeStockCombo">
            <summary>A combination of time limit and life limit</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.FullIconSize">
            The size of the full icon for players 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerOneStockPos">
            The position to put the player's stock indicators, indices 1+ are for the small stock icons/text 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerTwoStockPos">
            The position to put the player's stock indicators, indices 1+ are for the small stock icons/text 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerThreeStockPos">
            The position to put the player's stock indicators, indices 1+ are for the small stock icons/text 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerFourStockPos">
            The position to put the player's stock indicators, indices 1+ are for the small stock icons/text 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.SmallStockScale">
            The scale of how big the small stock icons are compared to the full icon 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.IconBuffer">
            The space between stock icons 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerOneIconScale">
            The amount needed to scale the icons to the correct size 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerTwoIconScale">
            The amount needed to scale the icons to the correct size 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerThreeIconScale">
            The amount needed to scale the icons to the correct size 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerFourIconScale">
            The amount needed to scale the icons to the correct size 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.GameFont">
            The font to use for drawing stuff 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerIcons">
            The icons for players 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Places">
            The places of players for winning and loosing TODO 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Winner">
            The winner of the game 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.endMusic">
            Music to play for Winner 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.MusicInstance">
            Handles Loopping and stuff 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerOneDeaths">
            <summary>Holds the references of deaths</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerTwoDeaths">
            <summary>Holds the references of deaths</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerThreeDeaths">
            <summary>Holds the references of deaths</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.PlayerFourDeaths">
            <summary>Holds the references of deaths</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.GameOver">
            <summary>Whether or not the game has ended</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.NumberOfPlayers">
            <summary>The number of players in the game</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.Stock">
            <summary>The lives available to players</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.ElimStatus">
            <summary>Holds which players have been eliminated</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.Gamemode.CurrentMode">
            <summary>The mode the game currently is</summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.#ctor">
            <summary>
            Initializes this class to control the game
            </summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.FillStockIconPositions(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Calculates the smaller icons used to display individual stocks for players
            </summary>
            <param name="iconPosition">The Vector2 array being used to hold the positions</param>
            Only five stock icons cans can be displayed, than it must go to text
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.AssignIcons(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Assigns icons to player to use for drawing gamemode screens
            </summary>
            <param name="playerOneIcon">The icon for player one</param>
            <param name="playerTwoIcon">The icon for player two</param>
            <param name="playerThreeIcon">The icon for player three</param>
            <param name="playerFourIcon">The icon for player four</param>
            <param name="gameFont">The font to use for game mode displays</param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.TimeLimit">
            <summary>
            TODO impliment a time limit mode
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.CheckPlayerStatus(System.Boolean@,System.Int32)">
            <summary>
            Used in LifeLimit to check if a player has used all their lives
            </summary>
            <param name="set">Reference to the bool to set (whether or not the player is dead)</param>
            <param name="deaths">The amount of times that the player has died</param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.LifeLimit">
            <summary>
            Determines if players have reached their life limit.
            </summary>
            <returns>Whether or not all but one player have reached their life limit</returns>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.DrawStock(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the indicator for a player's stock
            </summary>
            <param name="icon">The icon for the player</param>
            <param name="position">The position to draw the stock indicator</param>
            <param name="largeScale">The scale of the player's large icon</param>
            <param name="stock">The stock of the player (if time based 0)</param>
            <param name="eliminated">Whether or not they have been eliminated</param>
            <param name="spriteBatch">The batch to draw with</param>
            TODO get small stock icon to scale correctly (using the scale of each player's icon)
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.WriteGamemode(System.IO.StreamWriter)">
            <summary>
            
            </summary>
            <param name="streamWriter"></param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.ReadGamemode(System.IO.StreamReader)">
            <summary>
            Reads the information about a previosuly started game from a file
            </summary>
            <param name="streamReader"></param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.AddAudio(SuperSmashPolls.Graphics.AudioHandler)">
            <summary>
            Adds music to this object
            </summary>
            <param name="audioHandler"></param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.UpdateGamemodeState(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines if the game is over. Should be called during update.
            </summary>
            <returns>Returns the number of a player eliminated, if none were eliminated it returns 0</returns>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.Gamemode.DrawGamemodeOverlay(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Responsible for displaying two things. The stock of each player during the game, and the win/loss screen.
            Should be called during draw.
            </summary>
            <param name="batch">The spritebatch to draw with</param>
        </member>
        <member name="T:SuperSmashPolls.GameItemControl.PlayerClass">
             <summary>
             Class to control the movment and interaction of players.
             </summary>
             <remarks> This class should inlcude an instance of the character class, and should not repeat any affects of that
            class.</remarks>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.PlayerClass.PlayerID">
            The ID of the character 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.PlayerClass.PlayerHealth">
            The health that the character has 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.PlayerClass.JustDied">
            Whether or not the player died in the last update cycle 
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.PlayerClass.Deaths">
            <summary>The number of times that the player has died</summary>
        </member>
        <member name="F:SuperSmashPolls.GameItemControl.PlayerClass.PlayerCharacter">
            <summary>The player's character</summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.#ctor(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.SetCharacter(SuperSmashPolls.Characters.CharacterManager)">
            <summary>
            Sets the character
            </summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.UpdatePlayer(Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Update the player
            </summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.DrawPlayer(Microsoft.Xna.Framework.Graphics.SpriteBatch@,Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Draw the character
            </summary>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.WriteInfo(System.IO.StreamWriter@)">
            <summary>
            Writes the character information
            </summary>
            <param name="streamWriter"> What to write the file with (must already be opened)</param>
        </member>
        <member name="M:SuperSmashPolls.GameItemControl.PlayerClass.ReadInfo(System.IO.StreamReader@,System.Collections.Generic.Dictionary{System.String,SuperSmashPolls.Characters.CharacterManager},FarseerPhysics.Dynamics.World)">
            <summary>
            Sets up the character from saved data
            </summary>
            <param name="streamReader"> The stream to read data from (must already be opened)</param>
            <param name="characterList"> The characters available in the game </param>
            <param name="gameWorld"> The world to use for this </param>
            TODO make the new world system work with this loading methods
        </member>
        <member name="T:SuperSmashPolls.Graphics.AudioHandler">
            <summary>
            Handles the playing of audio.
            </summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.AudioHandler.Effects">
            The effects that this object can play 
        </member>
        <member name="F:SuperSmashPolls.Graphics.AudioHandler.RNG">
            The (pseudo-)Random Number Generator for deciding which file to play 
        </member>
        <member name="F:SuperSmashPolls.Graphics.AudioHandler.EffectInstances">
            Instances for the sound effects 
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.MakeEffectInstances">
            <summary>
            Makes instances for the sound effects
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.#ctor">
            <summary>
            The default constructor for this class.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.#ctor(Microsoft.Xna.Framework.Audio.SoundEffect[])">
            <summary>
            The default constructor for this class.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.GetEffects">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.AddAudio(Microsoft.Xna.Framework.Audio.SoundEffect[])">
            <summary>
            Add effects to this item.
            </summary>
            <param name="effects">The effects to add</param>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.GetRandomAudio">
            <summary>
            Gets a random sound effect from Effects
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Graphics.AudioHandler.PlayEffect(System.Int32)">
            <summary>
            Plays a (pseudo-)random effect from effects, or a selected one.
            </summary>
            <param name="specifiedEffect">If a specific effect is desired, put its index here to play it</param>
        </member>
        <member name="T:SuperSmashPolls.Graphics.CharacterAction">
            <summary>
            Class responsible for handing animations of characters.
            </summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.SpriteSheet">
            <summary>The spritesheet to take a value from (can be just one image)</summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.PlayTime">
            <summary>The amount of time (in seconds) that it takes to cycle through the sheet</summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.ImageSize">
            <summary>The size of each item in the sheet (ie. 32-bit spritesheet is (32, 32)</summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.DrawColor">
            <summary>The color to draw the image with, defaults to clear</summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.Scale">
            <summary>The scale to use</summary>
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.SheetSize">
            The amount of images on the X and Y axis, calculated in the constructor 
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.AnimatedPoint">
            The piece of the sheet to draw based on PlayTime @see Update 
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.LastUpdateTime">
            The last time that AnimatedPoint was updated 
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.Source">
            The source on the spritesheet to draw 
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.Destination">
            The destination for drawing the source rectangle 
        </member>
        <member name="F:SuperSmashPolls.Graphics.CharacterAction.StartedAnimation">
            The time that the animation was started 
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.#ctor(System.Single,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32)">
            <summary>
            Constructor from only imported items and constants
            </summary>
            <param name="playTime">The amount of time (in milliseconds) that it takes to loop through the entire sheet</param>
            <param name="imageSize">The size of one image on the sheet (i.e. 32 bit sheet is 32 x 32)</param>
            <param name="spriteSheet">The texture of the sheet</param>
            <param name="scale"></param>
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.GetCurrentIndex">
            <summary>
            Gets the index of the current frame of the animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.StartAnimation">
            <summary>
            Sets the data needed to restart the animation
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.AnimationAtEnd">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.UpdateAnimation(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Updates the animation
            </summary>
            <param name="position">The position on screen to draw the image</param>
            <returns>The body related to the current action (if bodies are enabled)</returns>
            <remarks>The body returned from here must be enabled if it is to collide with anything</remarks>
        </member>
        <member name="M:SuperSmashPolls.Graphics.CharacterAction.DrawAnimation(Microsoft.Xna.Framework.Graphics.SpriteBatch@,System.Single)">
            <summary>
            Draws the current image from the spritesheet based on the calculation of <see cref="M:SuperSmashPolls.Graphics.CharacterAction.UpdateAnimation(Microsoft.Xna.Framework.Vector2)"/>
            </summary>
            <param name="batch"> A reference to the current SpriteBatch</param>
            <param name="sidewaysVelocity">The velocity of the character sideways. Used to flip the sprite if the motion
            is in the opposite direction of how it is drawn. Leave blank for no effect.</param>
        </member>
        <member name="T:SuperSmashPolls.Levels.LevelHandler">
            <summary>
            Holds and handles the drawing of and contruction of bodies.
            This class is responsible for handling the storage and creation of static bodies to use in the game world.
            </summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.LevelBody">
            The bodies of this level (Body, texture, size (in meters)) 
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.LevelBackground">
            The background for this level 
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.LevelBackgroundScale">
            The amount that the background needs to be scaled (adjusted for different screen sizes) 
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.Name">
            <summary>The name of this level</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.PlayerOneSpawn">
            <summary>he place for a player to spawn on this map</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.PlayerTwoSpawn">
            <summary>he place for a player to spawn on this map</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.PlayerThreeSpawn">
            <summary>he place for a player to spawn on this map</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.PlayerFourSpawn">
            <summary>he place for a player to spawn on this map</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.RespawnPoint">
            <summary>he place for a player to spawn on this map</summary>
        </member>
        <member name="F:SuperSmashPolls.Levels.LevelHandler.LevelWorld">
            <summary>The Farseer world for this level</summary>
        </member>
        <member name="M:SuperSmashPolls.Levels.LevelHandler.#ctor(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="name">The name of this level</param>
            <param name="playerOneSpawn">The spawn point for player one</param>
            <param name="playerTwoSpawn">The spawn point for player two</param>
            <param name="playerThreeSpawn">The spawn point for player three</param>
            <param name="playerFourSpawn">The spawn point for player four</param>
            <param name="respawnPoint">The respawn point for all players when/if they die</param>
            <param name="horizontalGravity">The gravity of the world on a horizontal scale</param>
            <param name="verticalGravity">The gravity on a vertical scale</param>
        </member>
        <member name="M:SuperSmashPolls.Levels.LevelHandler.CreatePolygonFromTexture(Microsoft.Xna.Framework.Graphics.Texture2D,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm)">
            <summary>
            Creates a polygon from a texture. This is the important function here.
            </summary>
            <param name="texture">The texture to make a body from</param>
            <param name="density">The density of the object (Will almost always be one</param>
            <param name="position">The position (in meters) of the object in the world</param>
            <param name="scale">The scale of the object (how much to change its size)</param>
            <param name="algorithm">The decomposition algorithm to use</param>
            <remarks> Available algorithms to use are Bayazit, Dealuny, Earclip, Flipcode, Seidel, SeidelTrapazoid</remarks>
            @warning In order for this to work the input must have a transparent background. I highly reccomend that you
            only use this with PNGs as that is what I have tested and I know they work. This will only produce a bosy as
            clean as the texture you give it, so avoid partically transparent areas and little edges.
        </member>
        <member name="M:SuperSmashPolls.Levels.LevelHandler.SetBackground(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets a background to the level
            </summary>
            <param name="levelBackground">The texture to use as a background</param>
            <param name="levelBackgroundScale">The scale to use for the background texture (i.e. background is 640x360,
            screen is 1280x720 we would need to scale by 2)</param>
        </member>
        <member name="M:SuperSmashPolls.Levels.LevelHandler.AssignToWorld(System.Tuple{Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2}[])">
            <summary>
            Creates the body and puts it in the world
            </summary>
            <param name="items">All the items to add to the world (Texture, position (meters), size (meters))</param>
        </member>
        <member name="M:SuperSmashPolls.Levels.LevelHandler.DrawLevel(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            This draws world
            </summary>
            <param name="spriteBatch">The batch to draw with</param>
        </member>
        <member name="T:SuperSmashPolls.MenuControl.MenuCommands">
             <summary>
             Holds the different commands that the menu might need to send into the main game.
             There should be one of these for everthing the menu is supposed to do.
             </summary>
             <remarks>This is a somewhat kluge solution, but it works well</remarks>
            ****************************************************************************************************************
        </member>
        <member name="T:SuperSmashPolls.MenuControl.MenuItem">
            <summary>
            This class handles all properties of an item on a menu.
            One very important object is the void function reference to be ran when the item is selected. This function needs
            to be declared and defined elsewhere, and when the item is constructed it must be passed as an argument.
            </summary>
            <remarks>To create multi-leveled menus you must construct items from bottom to top.</remarks>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Position">
            Position of this item on the screen 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.TextBuffer">
            Buffer to move text over from Position 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.HasSubmenu">
            If the item has it's own menu that it can display if selected 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.DeferAudio">
            Whether or not to play the audio of the item above it 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.AmericanPositions">
            The position of characters for American Text mode 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Font">
            Font to use for this item 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Texture">
            Texture to use as the thumbnail for this item 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.TextureSize">
            The size of this item (as a ratio of the picture's size) 
        </member>
        <member name="P:SuperSmashPolls.MenuControl.MenuItem.Background">
            Background for this menu item (if the item is selected). This will cover the entire screen
            @warning This must be set during load content 
        </member>
        <member name="P:SuperSmashPolls.MenuControl.MenuItem.SubOverlay">
            Overlay this item's sub-menu on top of the current menu TODO impliment 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.MenuAudio">
            The music for this menu 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.MusicInstance">
            Handles looping of audio 
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Highlightable">
            <summary>Determines if the item is highlihtable or not. Highlightable items can be selected</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.CenterItem">
            <summary>Whether or not to center the item horizontally around the position.</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Command">
            <summary>The command to use if clicked on</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.AmericaText">
            <summary>Makes the text more american, not american't</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.DrawDown">
            <summary>The item within ContainedItems to draw instead of this one (-1 means draw this one)</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Text">
            <summary>Text for this item (drawn on top of the screen if displaying the item's menu</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.ContainedItems">
            <summary>The item's to display on this page</summary>
        </member>
        <member name="P:SuperSmashPolls.MenuControl.MenuItem.TextColor">
            <summary>Color for this item's text</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.Options">
            <summary>The options for this menu.</summary>
        </member>
        <member name="F:SuperSmashPolls.MenuControl.MenuItem.SelectedOption">
            <summary>The index of the options currently selected in Options</summary>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.#ctor(SuperSmashPolls.World_Control.WorldUnit,System.String,System.Boolean,SuperSmashPolls.World_Control.WorldUnit,System.Boolean,System.Boolean,SuperSmashPolls.MenuControl.MenuCommands,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="position">The position of the item on the screen.</param>
            <param name="text">The text of this item.</param>
            <param name="hasSubmenu">Whether or not this item has a menu below it to navigate to.</param>
            <param name="textBuffer">An amount to displace the text past the start of the item (to center with backgrounds)</param>
            <param name="centerItem">Whether or not to center the item around the position.</param>
            <param name="highlightable">Whether or not this item is highlightable</param>
            <param name="command">The command to have this item return</param>
            <param name="americaText">Makes the text great again</param>
            <param name="deferAudio">Whther or not to play the audio of the MenuItem above this one</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.AddOptions(System.Tuple{System.String,System.String[]}[])">
            <summary>
            Adds options to a submenu. Options can only be added once, otherwise the previously added options will be 
            overriden.
            </summary>
            <param name="options">The first string is the key to display on the menu as the title for the option, the
             second are the values to associate to that option.</param>
            TODO allow ranges of numbers
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.ReadOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.AddItem(SuperSmashPolls.MenuControl.MenuItem)">
            <summary>
            Add an item to display when this screen is being drawn.
            </summary>
            <param name="addItem">The item to add</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.SetFontForAll(Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Sets the font for all the items in this menu
            </summary>
            <param name="font">The font to set for all items in this menu</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.SetFont(Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Sets the font for this item
            </summary>
            <param name="font">The font to set it to</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.SetTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Add's a texture to the item
            </summary>
            <param name="texture">The texture of this item</param>
            <param name="size">The size of this item (in pixels)</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.AddAudio(SuperSmashPolls.Graphics.AudioHandler)">
            <summary>
            Adds audio to this object to be played
            </summary>
            <param name="audioHandler">The audio to add to this object</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.UpdateMenu(Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Update control of the menu.
            </summary>
            <param name="currentState">The current state to update from</param>
            <param name="lastPressed">The state to check if something was updated the previous time</param>
            <remarks>This is done to allow for enumerator values to be changed</remarks>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.StopAudio(System.Boolean)">
            <summary>
            Stops playing audio
            </summary>
            <param name="recursive">Stop audio for all child members as well</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.DisplayMenu(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Display the items in ContainedItems and other menu items.
            This is for if this item has a menu that it can display.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.DisplayItem(Microsoft.Xna.Framework.Graphics.SpriteBatch@)">
            <summary>
            Display this item.
            This is for when this item is displayed (on a different menu).
            </summary>
            <param name="batch">The SpriteBatch to draw with</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.AccessItem(System.Int32[])">
            <summary>
            Access function for members of DisplayItems.
            </summary>
            <param name="index">The indices for the path to the desired item</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.SetDrawDown(System.Int32[])">
            <summary>
            Sets the menu to view a specific item.
            </summary>
            <param name="drawTo">The path to the item to view</param>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.AmericaTextUpdate">
            <summary>
            Continues to make text great
            </summary>
        </member>
        <member name="M:SuperSmashPolls.MenuControl.MenuItem.DrawAmerican(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the text every other color
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Program.Main(System.String[])">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:SuperSmashPolls.Game1">
            <summary> 
            This is the main type of the game.
            </summary>
        </member>
        <member name="T:SuperSmashPolls.Game1.GameState">
            Handles the different states that the game can be in 
        </member>
        <member name="F:SuperSmashPolls.Game1.SettingsLocation">
            The location to save the settings for the game 
        </member>
        <member name="F:SuperSmashPolls.Game1.SaveLocation">
            The location to save the game 
        </member>
        <member name="F:SuperSmashPolls.Game1.DefinedMoves">
            The moves for all character 
        </member>
        <member name="F:SuperSmashPolls.Game1.CurrentGamemode">
            The gamemode for this game 
        </member>
        <member name="F:SuperSmashPolls.Game1.TheDonald">
            The one, the only, the Donald 
        </member>
        <member name="F:SuperSmashPolls.Game1.CurrentLevel">
            This is the level currently being played on 
        </member>
        <member name="F:SuperSmashPolls.Game1.TempleRock">
            Levels for the player to play on 
        </member>
        <member name="F:SuperSmashPolls.Game1.Temple">
            Levels for the player to play on 
        </member>
        <member name="F:SuperSmashPolls.Game1.Space">
            Levels for the player to play on 
        </member>
        <member name="F:SuperSmashPolls.Game1.FinalDestination">
            Levels for the player to play on 
        </member>
        <member name="F:SuperSmashPolls.Game1.Debate">
            Levels for the player to play on 
        </member>
        <member name="F:SuperSmashPolls.Game1.PlayerOne">
            The player's in this game 
        </member>
        <member name="F:SuperSmashPolls.Game1.PlayerTwo">
            The player's in this game 
        </member>
        <member name="F:SuperSmashPolls.Game1.PlayerThree">
            The player's in this game 
        </member>
        <member name="F:SuperSmashPolls.Game1.PlayerFour">
            The player's in this game 
        </member>
        <member name="F:SuperSmashPolls.Game1.State">
            Variable to hold the state of the game 
        </member>
        <member name="M:SuperSmashPolls.Game1.#ctor">
            <summary>
            Constructs the game's class
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run. 
            This is where it can query for any required services and load any non-graphic related content. Calling 
            base. Initialize will enumerate through any components and initialize them as well.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.LoadContent">
            <summary> 
            LoadContent will be called once per game and is the place to load all of your content.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload all content.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world, checking for collisions, gathering input, and 
            playing audio.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is where the game draw's the screen.
            </summary>
        </member>
        <member name="M:SuperSmashPolls.Game1.Xor(FarseerPhysics.Dynamics.Category[])">
            <summary>
            Exclusive or for Farseer categories
            </summary>
            <param name="categories"></param>
            <returns></returns>
        </member>
        <member name="M:SuperSmashPolls.Game1.MetersV2(System.Single,System.Single)">
            <summary>
            Get's the meters of something drawn in a 640x360 scale in a vector 2
            </summary>
            <param name="x">The x value to convert</param>
            <param name="y">The y value to convert</param>
        </member>
        <member name="M:SuperSmashPolls.Game1.InMeters(System.Single)">
            <summary> 
            Get's the meters of something drawn in a 640x360 scale
            </summary>
            <param name="pixels">The amount of pixels to convert</param>
        </member>
        <member name="M:SuperSmashPolls.Game1.DoesFileExist(System.String)">
            <summary>
            Tells if a file exists by checking if its size is greater than 0
            </summary>
            <param name="path">The path of the file to check</param>
            <returns>If the file exists</returns>
        </member>
        <member name="M:SuperSmashPolls.Game1.SetCharacter(SuperSmashPolls.Characters.CharacterManager)">
            <summary>
            Handles setting characters
            </summary>
            <returns>Whether or not a character has been set for each player in the game</returns>
        </member>
        <member name="M:SuperSmashPolls.Game1.AllCharactersSet">
            <summary>
            This helps to determine if all of the player characters have been set.
            </summary>
            <returns>Whether or not each player has a character set for them</returns>
        </member>
        <member name="M:SuperSmashPolls.Game1.ResetPlayerStats">
            <summary>
            Resets players to their basic state
            </summary>
        </member>
        <member name="T:SuperSmashPolls.World_Control.WorldUnit">
            <summary>
            This class will account for scaling of the physics system based on the size of the player's screen size.
            </summary>
            <remarks>WorldUnit should replace position and force/weight references throughout the rest of the game.</remarks>
            <remarks>0.01F unit of position is equal to 1% of the screen.</remarks>
            <remarks>1.0F of GodForce = ScreenSize * 10 | 0.1 of GodForce = ScreenSize</remarks>
            <remarks>To use this class to determine the size of something use the position functions</remarks>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.#ctor(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Construct a WorldUnit class for use as a position.
            </summary>
            <param name="screenSize">Reference to the size of the players screen (in pixels)</param>
            <param name="position">Position of the unit on screen as a float</param>
            <remarks> Doing it like this allows for the screensize to be changed without messing up physics.</remarks>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.#ctor(Microsoft.Xna.Framework.Vector2,SuperSmashPolls.World_Control.WorldUnit)">
            <summary>
            Construct a WorldUnit class based off the same scales as another WorldUnit for use as a position.
            </summary>
            <param name="position">The position of this object on the screen (as a ratio)</param>
            <param name="baseScaleUnit">The scale to base this new WorldUnit off of.</param>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.GetThisPosition">
            <summary>
            Gets this item's position on the screen
            </summary>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.Add(SuperSmashPolls.World_Control.WorldUnit)">
            <summary>
            Adds two WorldUnits for a new WorldUnit
            </summary>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.GetSize">
            <summary>
            Gets the size of this object
            </summary>
            <remarks> This is identical to GetThisPosition(), but it is easier to understand like this.</remarks>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.GetXSize">
            <summary>
            Gets the size of this object's X axis (the amount it is from (0,0))
            </summary>
        </member>
        <member name="M:SuperSmashPolls.World_Control.WorldUnit.GetYSize">
            <summary>
            Gets the size of this object's Y axis (the amount it is from (0,0))
            </summary>
        </member>
    </members>
</doc>
